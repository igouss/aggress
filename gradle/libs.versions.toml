[versions]
# Core Java Libraries
slf4j = "2.0.16"
logback = "1.5.12"
gson = "2.11.0"
guava = "33.4.0-jre"
commonsIo = "2.17.0"
commonsCodec = "1.17.1"
commonsCollections4 = "4.5.0-M2"

# Web Framework
vertx = "3.9.16"
thymeleaf = "3.1.2.RELEASE"

# Reactive Programming
rxjava = "1.3.8"

# HTTP Clients
asyncHttpClient = "2.0.31"
okhttp = "4.12.0"

# Dependency Injection
dagger = "2.51.1"
javaxInject = "1"
javaxAnnotation = "1.3.2"

# Search & Data
elasticsearch = "7.17.24"
elasticsearchJavaClient = "7.17.24"
elasticsearchTransport = "5.3.0"
jackson = "2.16.1"
lettuce = "4.5.0.Final"

# HTML Parsing
jsoup = "1.18.1"

# Command Line
joptSimple = "5.0.3"

# Validation
javaxValidation = "1.1.0.Final"

# Metrics
dropwizardMetrics = "4.2.28"

# Reflection
reflections = "0.10.2"

# Geospatial
jts = "1.13"

# Logging Integration
log4jToSlf4j = "2.23.1"

# Testing
junit5 = "5.11.3"

# Code Generation
lombok = "edge-SNAPSHOT"

# Languages
kotlin = "1.1.1"

# Network
netty = "4.1.115.Final"

# Console
jansi = "2.4.1"

# Build Tools
bucket4j = "8.14.0"

[libraries]
# Core Java Libraries
commonsCodec = { module = "commons-codec:commons-codec", version.ref = "commonsCodec" }
commonsCollections4 = { module = "org.apache.commons:commons-collections4", version.ref = "commonsCollections4" }
commonsIo = { module = "commons-io:commons-io", version.ref = "commonsIo" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }

# Web Framework
vertxCore = { module = "io.vertx:vertx-core", version.ref = "vertx" }
vertxWeb = { module = "io.vertx:vertx-web", version.ref = "vertx" }
vertxWebTemplThymeleaf = { module = "io.vertx:vertx-web-templ-thymeleaf", version.ref = "vertx" }
thymeleaf = { module = "org.thymeleaf:thymeleaf", version.ref = "thymeleaf" }

# Reactive Programming
rxjava = { module = "io.reactivex:rxjava", version.ref = "rxjava" }

# HTTP Clients
asyncHttpClient = { module = "org.asynchttpclient:async-http-client", version.ref = "asyncHttpClient" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttpUrlconnection = { module = "com.squareup.okhttp3:okhttp-urlconnection", version.ref = "okhttp" }

# Dependency Injection
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
daggerCompiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
javaxInject = { module = "javax.inject:javax.inject", version.ref = "javaxInject" }
javaxAnnotation = { module = "javax.annotation:javax.annotation-api", version.ref = "javaxAnnotation" }

# Search & Data
elasticsearch = { module = "org.elasticsearch:elasticsearch", version.ref = "elasticsearch" }
elasticsearchJavaClient = { module = "co.elastic.clients:elasticsearch-java", version.ref = "elasticsearchJavaClient" }
elasticsearchRestClient = { module = "org.elasticsearch.client:elasticsearch-rest-client", version.ref = "elasticsearch" }
elasticsearchTransport = { module = "org.elasticsearch.client:transport", version.ref = "elasticsearchTransport" }
jacksonDatabind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
lettuce = { module = "biz.paluch.redis:lettuce", version.ref = "lettuce" }

# HTML Parsing
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }

# Command Line
joptSimple = { module = "net.sf.jopt-simple:jopt-simple", version.ref = "joptSimple" }

# Validation
javaxValidation = { module = "javax.validation:validation-api", version.ref = "javaxValidation" }

# Metrics
dropwizardMetrics = { module = "io.dropwizard.metrics:metrics-core", version.ref = "dropwizardMetrics" }

# Reflection
reflections = { module = "org.reflections:reflections", version.ref = "reflections" }

# Geospatial
jts = { module = "com.vividsolutions:jts", version.ref = "jts" }

# Logging
slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
logbackClassic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
logbackCore = { module = "ch.qos.logback:logback-core", version.ref = "logback" }
log4jToSlf4j = { module = "org.apache.logging.log4j:log4j-to-slf4j", version.ref = "log4jToSlf4j" }

# Testing
junit5 = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit5" }

# Code Generation
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }

# Languages
kotlinStdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }

# Network
nettyCommon = { module = "io.netty:netty-common", version.ref = "netty" }

# Console
jansi = { module = "org.fusesource.jansi:jansi", version.ref = "jansi" }

# Build Tools
bucket4j = { module = "com.bucket4j:bucket4j-core", version.ref = "bucket4j" }

[bundles]
logging = ["slf4j", "logbackClassic", "logbackCore"]
vertxWeb = ["vertxCore", "vertxWeb", "vertxWebTemplThymeleaf", "thymeleaf"]
testing = ["junit5"]
okhttp = ["okhttp", "okhttpUrlconnection"]
elasticsearch = ["elasticsearchJavaClient", "elasticsearchRestClient", "jacksonDatabind"]
dagger = ["dagger", "daggerCompiler"]
