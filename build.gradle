plugins {
    id "java"
    id "idea"
    id 'com.github.ben-manes.versions' version '0.51.0'
    id 'com.google.cloud.tools.jib' version '3.4.5' apply false
}

dependencies {
    implementation project(":common")
    implementation project(":crawler")
    implementation project(":frontend")
    implementation project(":webadmin")
    implementation project(":storage")
}


allprojects {
    group "com.naxsoft"
    version "1.0-SNAPSHOT"
    repositories {
        mavenCentral()
        gradlePluginPortal()
        // Lombok edge/snapshot repository for Java 24+ support
        maven {
            url "https://projectlombok.org/edge-releases"
        }
    }

    // Configure Java 24 for all modules
    plugins.withType(JavaPlugin) {
        java {
            sourceCompatibility = JavaVersion.VERSION_24
            targetCompatibility = JavaVersion.VERSION_24
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.compilerArgs.addAll(["-Xlint:unchecked", "-Xlint:deprecation"])
        options.incremental = true
    }

    // Configure JUnit 5 for all test tasks
    tasks.withType(Test).configureEach {
        useJUnitPlatform()
    }
}

tasks.named('dependencyUpdates').configure {
    resolutionStrategy {
        componentSelection {
            all { ComponentSelection selection ->
                boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                    selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
                }
                if (rejected) {
                    selection.reject('Release candidate')
                }
            }
        }
    }
}

evaluationDependsOnChildren()

// Jib convenience tasks to replace old Docker build tasks
tasks.register('buildJibImages') {
    group = "Publishing"
    description = "Build all Docker images using Jib"
    dependsOn(":crawler:jibDockerBuild", ":frontend:jibDockerBuild", ":webadmin:jibDockerBuild")
}

tasks.register('buildDockerImages') {
    group = "Publishing"
    description = "Alias for buildJibImages"
    dependsOn tasks.buildJibImages
}

def gitVersion() {
    if (!System.getenv('CI_BUILD')) {
        // don't care
        return 1
    }
    def cmd = 'git rev-list HEAD --first-parent --count'
    cmd.execute().text.trim().toInteger()
}

defaultTasks = ["clean", "build"]
