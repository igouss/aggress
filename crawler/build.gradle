plugins {
    id "java"
    id "idea"
    id "com.google.cloud.tools.jib"
}


tasks.withType(JavaCompile).configureEach {
    options.incremental = true
}

/*
https://docs.gradle.org/current/userguide/java_library_plugin.html
*/
dependencies {
    implementation libs.jsoup
    implementation libs.rxjava
    implementation libs.bundles.logging
    implementation libs.reflections
    implementation libs.dropwizardMetrics
    implementation libs.commonsCollections4
    implementation libs.gson
    implementation libs.asyncHttpClient
    implementation libs.vertxCore
    implementation libs.joptSimple
    implementation libs.javaxValidation
    implementation libs.javaxInject
    implementation libs.javaxAnnotation
    implementation libs.dagger
    implementation project(':common')
    implementation project(':storage')
    implementation fileTree(dir: "libs", include: "*.jar")

    testImplementation libs.junit5

    compileOnly libs.lombok
    annotationProcessor libs.lombok
    testCompileOnly libs.lombok
    testAnnotationProcessor libs.lombok

    annotationProcessor libs.daggerCompiler
}


javadoc {
    options {
        windowTitle = "Aggress Crawler Javadoc ${project.version}"
    }
}

tasks.named('test').configure {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
        showStackTraces = true
        showCauses = true
        showExceptions = true
    }
    maxParallelForks = 5
    forkEvery = 50
    include "**/Test*.*"
    onlyIf {
        description = "gradle -Dcrawler.test=true"
        System.properties["crawler.test"] == "true"
    }
}

tasks.register('integrationTest', Test) {
    useJUnitPlatform()
    dependsOn tasks.test
    include "**/IntegrationTest*.*"
}

jib {
    from {
        image = 'eclipse-temurin:24-jre'
    }
    to {
        image = 'aggress/crawler'
        tags = ['latest']
    }
    container {
        mainClass = 'com.naxsoft.Crawler'
        ports = ['8000']
        jvmFlags = [
                '-Xdebug',
                '-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000',
                '-Djdk.tls.allowUnsafeServerCertChange=true',
                '-Dsun.security.ssl.allowUnsafeRenegotiation=true'
        ]
        args = ['-createESIndex', '-createESMappings', '-clean', '-populate', '-crawl', '-parse']
        workingDirectory = '/opt/crawler'
        user = 'crawler:aggress'
    }
    extraDirectories {
        paths {
            path {
                from = file('src/main/resources/startssl-java-master')
                into = '/opt/crawler'
                includes = ['*.crt', '*.sh']
            }
        }
    }
}