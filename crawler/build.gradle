plugins {
    id "net.ltgt.apt" version "0.6"
}

apply plugin: 'java'

ext {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

dependencies {
    compile 'org.elasticsearch:elasticsearch:2.3.3'
    compile 'org.jsoup:jsoup:1.8.3'
    compile 'org.hibernate:hibernate-core:5.0.2.Final'
    compile 'org.hibernate:hibernate-hikaricp:5.0.2.Final'
    compile 'org.hibernate:hibernate-ehcache:5.0.2.Final'
    compile 'org.hibernate:hibernate-validator:5.0.2.Final'
    compile 'ch.qos.logback:logback-core:1.1.3'
    compile 'ch.qos.logback:logback-classic:1.1.3'
    compile 'org.glassfish.web:el-impl:2.2.1-b05'
    compile 'org.postgresql:postgresql:9.4-1201-jdbc41'
    compile 'com.impossibl.pgjdbc-ng:pgjdbc-ng:0.5'
    compile 'com.internetitem:logback-elasticsearch-appender:1.2'
    compile 'io.reactivex:rxjava:1.1.4'
    compile 'org.reflections:reflections:0.9.10'
    compile 'io.dropwizard.metrics:metrics-core:3.1.2'
    compile 'org.elasticsearch:metrics-elasticsearch-reporter:2.0'
    compile 'org.apache.commons:commons-collections4:4.0'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'commons-io:commons-io:2.4'
    compile 'com.ning:async-http-client:1.9.33'
    compile 'org.glassfish.grizzly:grizzly-websockets:2.3.23'
    compile 'junit:junit:4.12'
    compile 'org.jooq:jooq:3.7.1'
    compile 'io.vertx:vertx-core:3.2.1'
    compile 'com.h2database:h2:1.3.176'
    compile 'net.sf.jopt-simple:jopt-simple:4.9'
    compile 'com.google.dagger:dagger:2.2'
    compile "net.ltgt.gradle:gradle-apt-plugin:0.6"
    compile 'com.google.dagger:dagger-compiler:2.2'
    compile 'biz.paluch.redis:lettuce:4.1.2.Final'
    compile 'org.apache.kafka:kafka-clients:0.9.0.0'
    compile 'com.github.davidmoten:rxjava-slf4j:0.6.2' // https://github.com/davidmoten/rxjava-slf4j
    compile 'com.github.davidmoten:rxjava-extras:0.7.9.1' // https://github.com/davidmoten/rxjava-extras
    apt 'com.google.dagger:dagger-compiler:2.2'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/generated'
        }
    }
    test {
        java {
            srcDir 'src/main/generated_tests'
        }
    }
}

test {
    testLogging.showStandardStreams = true;
    testLogging.showStackTraces = true;
    testLogging.showCauses = true;
    testLogging.showExceptions = true;
    maxParallelForks = 5
    forkEvery = 50
    include '**/Test*.*'
//    useTestNG()
}

task integrationTest(type: Test, dependsOn: "test") << {
    include '**/IntegrationTest*.*'
}


test.onlyIf {
    description = 'gradle -Dcrawler.test=true'
    System.properties['crawler.test'] == 'true'
}

task copyLibs(type: Copy, dependsOn: clean) << {
    description = "Copy dependency files to build directory"
    into "build"
    from configurations.compile
}

task buildscriptDependencies << {
    description = "Print project's dependencies"
    buildscript.configurations.classpath.each { println it }
}

task crawler(type:JavaExec) {
    description = "Run crawler"
    main = "com.naxsoft.Aggress"
    classpath = sourceSets.main.runtimeClasspath
}

task crawlerjar(type: Jar) << {
    description = "Generate project jar file"
    manifest {
        attributes 'Implementation-Title': 'com.naxsoft.Aggress crawler',
                'Implementation-Version': version,
                'Built-By': System.getProperty('user.name'),
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version'),
                'Main-Class': 'com.naxsoft.Aggress'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
