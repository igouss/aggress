buildscript {
    ext.kotlin_version = kotlinVersion
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

plugins {
    id "net.ltgt.apt" version "0.6"
}

configurations {
    apt
}
tasks.withType(JavaCompile) {
    options.annotationProcessorPath = configurations.apt
}

/*
https://docs.gradle.org/current/userguide/java_library_plugin.html
*/
dependencies {
    compile "org.jsoup:jsoup:$jsoupVersion"

//    compile group: 'io.reactivex.rxjava2', name: 'rxjava', version: '2.0.0-RC3'
    compile "io.reactivex:rxjava:$rxjavaVersion"

    compile "ch.qos.logback:logback-core:$logbackVersion"
    compile "ch.qos.logback:logback-classic:$logbackVersion"

    compile "org.reflections:reflections:$reflectionsVersion"
    compile "io.dropwizard.metrics:metrics-core:$metricsVersion"
    compile "org.apache.commons:commons-collections4:$commonsCollections4Version"
    compile "com.google.code.gson:gson:$gsonVersion"

    compile "com.squareup.okhttp3:okhttp:$okhttpVersion"
    compile "com.squareup.okhttp3:okhttp-urlconnection:$okhttpVersion"

    compile "junit:junit:$junitVersion"
    compile "io.vertx:vertx-core:$vertxVersion"

    compile "net.sf.jopt-simple:jopt-simple:$joptVersion"

    compile "net.ltgt.gradle:gradle-apt-plugin:$gradleAptPluginVersion"
    compile "com.github.vladimir-bukhtoyarov:bucket4j-core:$bucket4jVersion"


//    compile "com.github.davidmoten:rxjava-slf4j:0.6.2" // https://github.com/davidmoten/rxjava-slf4j
//    compile "com.github.davidmoten:rxjava-extras:0.7.9.24" // https://github.com/davidmoten/rxjava-extras

    compile project(':common')
    compile project(':storage')
    compile "javax.validation:validation-api:$validationApiVersion"
    compile "javax.inject:javax.inject:$javaxInjectVersion"

    compile  "com.google.dagger:dagger:$daggerVersion"
    apt "com.google.dagger:dagger-compiler:$daggerVersion"

    compile fileTree(dir: "libs", include: "*.jar")
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion"
}

compileJava {
    options.annotationProcessorPath = configurations.apt
}

javadoc {
    options {
        windowTitle = "Aggress Crawler Javadoc ${project.version}"
    }
}

test {
    testLogging.showStandardStreams = true;
    testLogging.showStackTraces = true;
    testLogging.showCauses = true;
    testLogging.showExceptions = true;
    maxParallelForks = 5
    forkEvery = 50
    include "**/Test*.*"
//    useTestNG()
}

task integrationTest(type: Test) {
    dependsOn test
    include "**/IntegrationTest*.*"
}


test.onlyIf {
    description = "gradle -Dcrawler.test=true"
    System.properties["crawler.test"] == "true"
}

task copyDepsToDocker(type: Copy) {
    description = "Copy all dependencies to docker/crawler"
    from configurations.compile
    into "../docker/crawler/deps"
}


task copyAppToDocker(type: Copy) {
    description = "Copy app to docker/crawler"
    dependsOn jar
    from("$buildDir/libs") {
        include "crawler*.jar"
    }
    into("../docker/crawler/app")
}

task copyCetrificatesToDocker(type: Copy) {
    description = "Copy app to docker/crawler"
    from("src/main/resources/startssl-java-master")
    into("../docker/crawler/cert")
}

task dockerPublish() {
    description = "Copy app and all dependencies to docker/crawler"
    dependsOn copyDepsToDocker, copyAppToDocker, copyCetrificatesToDocker
}


repositories {
    mavenCentral()
}