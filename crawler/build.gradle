plugins {
    id "java"
    id "idea"
    id "com.google.cloud.tools.jib"
    id "org.springframework.boot"
    id "io.spring.dependency-management"
}


tasks.withType(JavaCompile).configureEach {
    options.incremental = true
}

/*
https://docs.gradle.org/current/userguide/java_library_plugin.html
*/
dependencies {
    implementation libs.jsoup
    implementation libs.bundles.logging
    implementation libs.reflections
    implementation libs.dropwizardMetrics
    implementation libs.commonsCollections4
    implementation libs.gson
    implementation libs.guava
    implementation libs.asyncHttpClient
    implementation 'io.projectreactor:reactor-core'
    implementation libs.vertxCore
    implementation libs.joptSimple
    implementation libs.javaxValidation
    implementation project(':common')
    implementation project(':storage')
    implementation fileTree(dir: "libs", include: "*.jar")

    // Spring Boot dependencies
    implementation libs.springBootStarter
    implementation libs.springBootStarterActuator
    implementation libs.springBootStarterValidation
    annotationProcessor libs.springBootConfigurationProcessor

    testImplementation libs.junit5
    testImplementation libs.springBootStarterTest

    compileOnly libs.lombok
    annotationProcessor libs.lombok
    testCompileOnly libs.lombok
    testAnnotationProcessor libs.lombok

    // Pure Reactor implementation - no RxJava
}

// Explicitly set the main class to avoid Spring Boot plugin issues with Java 24
springBoot {
    mainClass = 'com.naxsoft.CrawlerApplication'
}


javadoc {
    options {
        windowTitle = "Aggress Crawler Javadoc ${project.version}"
    }
}

tasks.named('test').configure {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
        showStackTraces = true
        showCauses = true
        showExceptions = true
    }
    maxParallelForks = 5
    forkEvery = 50
    include "**/Test*.*"
    onlyIf {
        description = "gradle -Dcrawler.test=true"
        System.properties["crawler.test"] == "true"
    }
}

tasks.register('integrationTest', Test) {
    useJUnitPlatform()
    dependsOn tasks.test
    include "**/IntegrationTest*.*"
}

jib {
    from {
        image = 'eclipse-temurin:24-jre'
    }
    to {
        image = 'aggress/crawler'
        tags = ['latest']
    }
    container {
        // Use Spring Boot main class (new parallel infrastructure)
        // To use legacy Dagger main class, change to 'com.naxsoft.Crawler'
        mainClass = 'com.naxsoft.CrawlerApplication'
        ports = ['8000', '8080'] // Debug port + Spring Boot Actuator
        jvmFlags = [
                '-Xdebug',
                '-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000',
                '-Djdk.tls.allowUnsafeServerCertChange=true',
                '-Dsun.security.ssl.allowUnsafeRenegotiation=true'
        ]
        // Spring Boot args (legacy Dagger args: ['-createESIndex', '-createESMappings', '-clean', '-populate', '-crawl', '-parse'])
        args = ['--spring.profiles.active=development']
        workingDirectory = '/opt/crawler'
        user = 'crawler:aggress'
        environment = [
                'SPRING_PROFILES_ACTIVE'                   : 'development',
                'MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE': 'health,info,metrics'
        ]
    }
    extraDirectories {
        paths {
            path {
                from = file('src/main/resources/startssl-java-master')
                into = '/opt/crawler'
                includes = ['*.crt', '*.sh']
            }
        }
    }
}