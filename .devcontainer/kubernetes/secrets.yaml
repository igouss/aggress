apiVersion: v1
kind: Secret
metadata:
  name: aggress-secrets
  namespace: aggress-dev
  labels:
    app: aggress
    environment: development
type: Opaque
data:
  # Base64 encoded values - replace with actual credentials
  # To encode: echo -n 'your-value' | base64
  
  # Redis password (default: 'devpassword')
  redis-password: ZGV2cGFzc3dvcmQ=
  
  # Crawler credentials (empty by default)
  crawler-login: ""
  crawler-password: ""
  
  # Database credentials if needed
  db-username: ""
  db-password: ""
---
apiVersion: v1
kind: Secret
metadata:
  name: ssl-certificates
  namespace: aggress-dev
  labels:
    app: aggress
    environment: development
type: Opaque
data:
  # SSL certificates for StartSSL - these would be populated with actual certs
  # Format: base64 encoded certificate content
  ca.crt: ""
  sub.class1.server.ca.crt: ""
  sub.class2.server.ca.crt: ""
  sub.class3.server.ca.crt: ""
  sub.class4.server.ca.crt: ""
---
# Service account for the application
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aggress-service-account
  namespace: aggress-dev
  labels:
    app: aggress
    environment: development
---
# RBAC for the service account
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: aggress-dev
  name: aggress-role
rules:
  - apiGroups: [ "" ]
    resources: [ "pods", "services", "configmaps", "secrets" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "apps" ]
    resources: [ "deployments", "replicasets" ]
    verbs: [ "get", "list", "watch" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: aggress-role-binding
  namespace: aggress-dev
subjects:
  - kind: ServiceAccount
    name: aggress-service-account
    namespace: aggress-dev
roleRef:
  kind: Role
  name: aggress-role
  apiGroup: rbac.authorization.k8s.io